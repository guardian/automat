{
  "version": "tree-0.1",
  "tree": {
    "id": "App",
    "path": "",
    "children": {
      "Tree": {
        "id": "Tree",
        "path": "Tree"
      },
      "automat-api": {
        "id": "automat-api",
        "path": "automat-api",
        "children": {
          "Stack": {
            "id": "Stack",
            "path": "automat-api/Stack"
          },
          "Stage": {
            "id": "Stage",
            "path": "automat-api/Stage"
          },
          "App": {
            "id": "App",
            "path": "automat-api/App"
          },
          "VpcId": {
            "id": "VpcId",
            "path": "automat-api/VpcId"
          },
          "Subnets": {
            "id": "Subnets",
            "path": "automat-api/Subnets"
          },
          "AZs": {
            "id": "AZs",
            "path": "automat-api/AZs"
          },
          "AMI": {
            "id": "AMI",
            "path": "automat-api/AMI"
          },
          "vpc": {
            "id": "vpc",
            "path": "automat-api/vpc",
            "children": {
              "PublicSubnet1": {
                "id": "PublicSubnet1",
                "path": "automat-api/vpc/PublicSubnet1"
              }
            }
          },
          "ConfBucket": {
            "id": "ConfBucket",
            "path": "automat-api/ConfBucket"
          },
          "automat-elasticsearch": {
            "id": "automat-elasticsearch",
            "path": "automat-api/automat-elasticsearch",
            "attributes": {
              "aws:cdk:cloudformation:type": "AWS::Elasticsearch::Domain",
              "aws:cdk:cloudformation:props": {
                "domainName": "automat-elasticsearch-prod",
                "ebsOptions": {
                  "ebsEnabled": true,
                  "volumeSize": 60
                },
                "elasticsearchClusterConfig": {
                  "instanceType": "r5.large.elasticsearch",
                  "instanceCount": 1
                },
                "elasticsearchVersion": "7.4",
                "tags": [
                  {
                    "key": "App",
                    "value": {
                      "Ref": "App"
                    }
                  },
                  {
                    "key": "Owner",
                    "value": "automat"
                  },
                  {
                    "key": "Stack",
                    "value": {
                      "Ref": "Stack"
                    }
                  },
                  {
                    "key": "Stage",
                    "value": {
                      "Ref": "Stage"
                    }
                  }
                ]
              }
            }
          },
          "roll": {
            "id": "roll",
            "path": "automat-api/roll",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "automat-api/roll/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::Role",
                  "aws:cdk:cloudformation:props": {
                    "assumeRolePolicyDocument": {
                      "Statement": [
                        {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": {
                            "Service": "ec2.amazonaws.com"
                          }
                        }
                      ],
                      "Version": "2012-10-17"
                    },
                    "policies": [
                      {
                        "policyName": "instancePolicy",
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "es:*",
                              "Effect": "Allow",
                              "Resource": {
                                "Fn::GetAtt": [
                                  "automatelasticsearch",
                                  "Arn"
                                ]
                              }
                            },
                            {
                              "Action": [
                                "s3:GetObject",
                                "s3:HeadObject",
                                "s3:List*"
                              ],
                              "Effect": "Allow",
                              "Resource": [
                                "arn:aws:s3:::aws-frontend-artifacts/*",
                                {
                                  "Fn::Join": [
                                    "",
                                    [
                                      "arn:aws:s3:::",
                                      {
                                        "Ref": "ConfBucket"
                                      },
                                      "/*"
                                    ]
                                  ]
                                }
                              ]
                            },
                            {
                              "Action": [
                                "ssmmessages:*",
                                "ssm:*",
                                "ec2messages:*",
                                "logs:*"
                              ],
                              "Effect": "Allow",
                              "Resource": "*"
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    ],
                    "tags": [
                      {
                        "key": "App",
                        "value": {
                          "Ref": "App"
                        }
                      },
                      {
                        "key": "Owner",
                        "value": "automat"
                      },
                      {
                        "key": "Stack",
                        "value": {
                          "Ref": "Stack"
                        }
                      },
                      {
                        "key": "Stage",
                        "value": {
                          "Ref": "Stage"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "ASG": {
            "id": "ASG",
            "path": "automat-api/ASG",
            "children": {
              "InstanceSecurityGroup": {
                "id": "InstanceSecurityGroup",
                "path": "automat-api/ASG/InstanceSecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "automat-api/ASG/InstanceSecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "automat-api/ASG/InstanceSecurityGroup",
                        "securityGroupEgress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "description": "Allow all outbound traffic by default",
                            "ipProtocol": "-1"
                          }
                        ],
                        "tags": [
                          {
                            "key": "App",
                            "value": {
                              "Ref": "App"
                            }
                          },
                          {
                            "key": "Name",
                            "value": "automat-api/ASG"
                          },
                          {
                            "key": "Owner",
                            "value": "automat"
                          },
                          {
                            "key": "Stack",
                            "value": {
                              "Ref": "Stack"
                            }
                          },
                          {
                            "key": "Stage",
                            "value": {
                              "Ref": "Stage"
                            }
                          }
                        ],
                        "vpcId": {
                          "Ref": "VpcId"
                        }
                      }
                    }
                  },
                  "from automatapiLBSecurityGroup4548FB9E:9000": {
                    "id": "from automatapiLBSecurityGroup4548FB9E:9000",
                    "path": "automat-api/ASG/InstanceSecurityGroup/from automatapiLBSecurityGroup4548FB9E:9000",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupIngress",
                      "aws:cdk:cloudformation:props": {
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "fromPort": 9000,
                        "groupId": {
                          "Fn::GetAtt": [
                            "ASGInstanceSecurityGroup0525485D",
                            "GroupId"
                          ]
                        },
                        "sourceSecurityGroupId": {
                          "Fn::GetAtt": [
                            "LBSecurityGroup8A41EA2B",
                            "GroupId"
                          ]
                        },
                        "toPort": 9000
                      }
                    }
                  }
                }
              },
              "InstanceProfile": {
                "id": "InstanceProfile",
                "path": "automat-api/ASG/InstanceProfile",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::IAM::InstanceProfile",
                  "aws:cdk:cloudformation:props": {
                    "roles": [
                      {
                        "Ref": "roll9AE24C80"
                      }
                    ]
                  }
                }
              },
              "LaunchConfig": {
                "id": "LaunchConfig",
                "path": "automat-api/ASG/LaunchConfig",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::LaunchConfiguration",
                  "aws:cdk:cloudformation:props": {
                    "imageId": {
                      "Ref": "AMI"
                    },
                    "instanceType": "t3a.small",
                    "associatePublicIpAddress": true,
                    "iamInstanceProfile": {
                      "Ref": "ASGInstanceProfile0A2834D7"
                    },
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "ASGInstanceSecurityGroup0525485D",
                          "GroupId"
                        ]
                      }
                    ],
                    "userData": {
                      "Fn::Base64": {
                        "Fn::Join": [
                          "",
                          [
                            "#!/bin/bash\nmkdir /etc/gu\naws s3 cp s3://",
                            {
                              "Ref": "ConfBucket"
                            },
                            "/",
                            {
                              "Ref": "Stage"
                            },
                            "/automat-api.private.conf /etc/gu\naws s3 cp s3://aws-frontend-artifacts/frontend/PROD/automat-api/automat-api_1.0-SNAPSHOT_all.deb /tmp\ndpkg -i /tmp/automat-api_1.0-SNAPSHOT_all.deb"
                          ]
                        ]
                      }
                    }
                  }
                }
              },
              "ASG": {
                "id": "ASG",
                "path": "automat-api/ASG/ASG",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::AutoScaling::AutoScalingGroup",
                  "aws:cdk:cloudformation:props": {
                    "maxSize": "2",
                    "minSize": "1",
                    "launchConfigurationName": {
                      "Ref": "ASGLaunchConfigC00AF12B"
                    },
                    "tags": [
                      {
                        "key": "App",
                        "value": {
                          "Ref": "App"
                        },
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Name",
                        "value": "automat-api/ASG",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Owner",
                        "value": "automat",
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Stack",
                        "value": {
                          "Ref": "Stack"
                        },
                        "propagateAtLaunch": true
                      },
                      {
                        "key": "Stage",
                        "value": {
                          "Ref": "Stage"
                        },
                        "propagateAtLaunch": true
                      }
                    ],
                    "targetGroupArns": [
                      {
                        "Ref": "LBListenerTargetGroupF04FCF6D"
                      }
                    ],
                    "vpcZoneIdentifier": {
                      "Ref": "Subnets"
                    }
                  }
                }
              },
              "ScalingPolicyGT80CPU": {
                "id": "ScalingPolicyGT80CPU",
                "path": "automat-api/ASG/ScalingPolicyGT80CPU",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "automat-api/ASG/ScalingPolicyGT80CPU/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::AutoScaling::ScalingPolicy",
                      "aws:cdk:cloudformation:props": {
                        "autoScalingGroupName": {
                          "Ref": "ASG46ED3070"
                        },
                        "policyType": "TargetTrackingScaling",
                        "targetTrackingConfiguration": {
                          "predefinedMetricSpecification": {
                            "predefinedMetricType": "ASGAverageCPUUtilization"
                          },
                          "targetValue": 80
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "LB": {
            "id": "LB",
            "path": "automat-api/LB",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "automat-api/LB/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
                  "aws:cdk:cloudformation:props": {
                    "scheme": "internet-facing",
                    "securityGroups": [
                      {
                        "Fn::GetAtt": [
                          "LBSecurityGroup8A41EA2B",
                          "GroupId"
                        ]
                      }
                    ],
                    "subnets": {
                      "Ref": "Subnets"
                    },
                    "tags": [
                      {
                        "key": "App",
                        "value": {
                          "Ref": "App"
                        }
                      },
                      {
                        "key": "Owner",
                        "value": "automat"
                      },
                      {
                        "key": "Stack",
                        "value": {
                          "Ref": "Stack"
                        }
                      },
                      {
                        "key": "Stage",
                        "value": {
                          "Ref": "Stage"
                        }
                      }
                    ],
                    "type": "application"
                  }
                }
              },
              "SecurityGroup": {
                "id": "SecurityGroup",
                "path": "automat-api/LB/SecurityGroup",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "automat-api/LB/SecurityGroup/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroup",
                      "aws:cdk:cloudformation:props": {
                        "groupDescription": "Automatically created Security Group for ELB automatapiLB5B22C249",
                        "securityGroupIngress": [
                          {
                            "cidrIp": "0.0.0.0/0",
                            "ipProtocol": "tcp",
                            "fromPort": 80,
                            "toPort": 80,
                            "description": "Allow from anyone on port 80"
                          }
                        ],
                        "tags": [
                          {
                            "key": "App",
                            "value": {
                              "Ref": "App"
                            }
                          },
                          {
                            "key": "Owner",
                            "value": "automat"
                          },
                          {
                            "key": "Stack",
                            "value": {
                              "Ref": "Stack"
                            }
                          },
                          {
                            "key": "Stage",
                            "value": {
                              "Ref": "Stage"
                            }
                          }
                        ],
                        "vpcId": {
                          "Ref": "VpcId"
                        }
                      }
                    }
                  },
                  "to automatapiASGInstanceSecurityGroup9E12140D:9000": {
                    "id": "to automatapiASGInstanceSecurityGroup9E12140D:9000",
                    "path": "automat-api/LB/SecurityGroup/to automatapiASGInstanceSecurityGroup9E12140D:9000",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::EC2::SecurityGroupEgress",
                      "aws:cdk:cloudformation:props": {
                        "groupId": {
                          "Fn::GetAtt": [
                            "LBSecurityGroup8A41EA2B",
                            "GroupId"
                          ]
                        },
                        "ipProtocol": "tcp",
                        "description": "Load balancer to target",
                        "destinationSecurityGroupId": {
                          "Fn::GetAtt": [
                            "ASGInstanceSecurityGroup0525485D",
                            "GroupId"
                          ]
                        },
                        "fromPort": 9000,
                        "toPort": 9000
                      }
                    }
                  }
                }
              },
              "Listener": {
                "id": "Listener",
                "path": "automat-api/LB/Listener",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "automat-api/LB/Listener/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::Listener",
                      "aws:cdk:cloudformation:props": {
                        "defaultActions": [
                          {
                            "type": "forward",
                            "targetGroupArn": {
                              "Ref": "LBListenerTargetGroupF04FCF6D"
                            }
                          }
                        ],
                        "loadBalancerArn": {
                          "Ref": "LB8A12904C"
                        },
                        "port": 80,
                        "protocol": "HTTP"
                      }
                    }
                  },
                  "TargetGroup": {
                    "id": "TargetGroup",
                    "path": "automat-api/LB/Listener/TargetGroup",
                    "children": {
                      "Resource": {
                        "id": "Resource",
                        "path": "automat-api/LB/Listener/TargetGroup/Resource",
                        "attributes": {
                          "aws:cdk:cloudformation:type": "AWS::ElasticLoadBalancingV2::TargetGroup",
                          "aws:cdk:cloudformation:props": {
                            "healthCheckIntervalSeconds": 30,
                            "healthCheckPath": "/healthcheck",
                            "healthCheckTimeoutSeconds": 10,
                            "healthyThresholdCount": 2,
                            "port": 9000,
                            "protocol": "HTTP",
                            "tags": [
                              {
                                "key": "App",
                                "value": {
                                  "Ref": "App"
                                }
                              },
                              {
                                "key": "Owner",
                                "value": "automat"
                              },
                              {
                                "key": "Stack",
                                "value": {
                                  "Ref": "Stack"
                                }
                              },
                              {
                                "key": "Stage",
                                "value": {
                                  "Ref": "Stage"
                                }
                              }
                            ],
                            "targetType": "instance",
                            "unhealthyThresholdCount": 5,
                            "vpcId": {
                              "Ref": "VpcId"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "automat-ui": {
        "id": "automat-ui",
        "path": "automat-ui",
        "children": {
          "Stack": {
            "id": "Stack",
            "path": "automat-ui/Stack"
          },
          "Stage": {
            "id": "Stage",
            "path": "automat-ui/Stage"
          },
          "App": {
            "id": "App",
            "path": "automat-ui/App"
          },
          "automat-ui": {
            "id": "automat-ui",
            "path": "automat-ui/automat-ui",
            "children": {
              "Resource": {
                "id": "Resource",
                "path": "automat-ui/automat-ui/Resource",
                "attributes": {
                  "aws:cdk:cloudformation:type": "AWS::S3::Bucket",
                  "aws:cdk:cloudformation:props": {
                    "bucketName": "com-gu-automat-ui",
                    "tags": [
                      {
                        "key": "App",
                        "value": {
                          "Ref": "App"
                        }
                      },
                      {
                        "key": "Owner",
                        "value": "automat"
                      },
                      {
                        "key": "Stack",
                        "value": {
                          "Ref": "Stack"
                        }
                      },
                      {
                        "key": "Stage",
                        "value": {
                          "Ref": "Stage"
                        }
                      }
                    ],
                    "websiteConfiguration": {
                      "indexDocument": "index.html",
                      "errorDocument": "index.html"
                    }
                  }
                }
              },
              "Notifications": {
                "id": "Notifications",
                "path": "automat-ui/automat-ui/Notifications"
              },
              "Policy": {
                "id": "Policy",
                "path": "automat-ui/automat-ui/Policy",
                "children": {
                  "Resource": {
                    "id": "Resource",
                    "path": "automat-ui/automat-ui/Policy/Resource",
                    "attributes": {
                      "aws:cdk:cloudformation:type": "AWS::S3::BucketPolicy",
                      "aws:cdk:cloudformation:props": {
                        "bucket": {
                          "Ref": "automatuiA0421C0E"
                        },
                        "policyDocument": {
                          "Statement": [
                            {
                              "Action": "s3:GetObject",
                              "Effect": "Allow",
                              "Principal": "*",
                              "Resource": {
                                "Fn::Join": [
                                  "",
                                  [
                                    {
                                      "Fn::GetAtt": [
                                        "automatuiA0421C0E",
                                        "Arn"
                                      ]
                                    },
                                    "/*"
                                  ]
                                ]
                              }
                            }
                          ],
                          "Version": "2012-10-17"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}